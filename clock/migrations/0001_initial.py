# Generated by Django 3.1.5 on 2021-01-11 22:18

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Clocktypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('clock_type', models.CharField(choices=[('Advertising-Quartz', 'Advertising-Quartz'), ('Advertising-Electric', 'Advertising-Electric'), ('Advertising-Mechanical', 'Advertising-Mechanical'), ('Animated', 'Animated'), ('Anniversary-Quartz', 'Anniversary-Quartz'), ('Anniversary-Mechanical', 'Anniversary-Mechanical'), ('Atmos', 'Atmos'), ('Balloon', 'Balloon'), ('Banjo', 'Banjo'), ('Beehive', 'Beehive'), ('Black Mantel', 'Black Mantel'), ('Blinking Eye-Quartz', 'Blinking Eye-Quartz'), ('Blinking Eye-Mechanical', 'Blinking Eye-Mechanical'), ('Calendar', 'Calendar'), ('Carriage', 'Carriage'), ('China/Porcelain', 'China/Porcelain'), ('Column', 'Column'), ('Crystal Regulator', 'Crystal Regulator'), ('Cuckoo', 'Cuckoo'), ('Dial-Quartz', 'Dial-Quartz'), ('Dial-Mechanical', 'Dial-Mechanical'), ('School House-Quartz', 'School House-Quartz'), ('School House-Electric', 'School House-Electric'), ('School House-Mechanical', 'School House-Mechanical'), ('Figural', 'Figural'), ('Garnitures', 'Garnitures'), ('Gothic', 'Gothic'), ('Kitchen', 'Kitchen'), ('Lantern', 'Lantern'), ('Grandfather/Grandmother', 'Grandfather/Grandmother'), ('Grandfather/Grandmother-Tubular', 'Grandfather/Grandmother-Tubular'), ('Lyre', 'Lyre'), ('Mission', 'Mission'), ('Mystery', 'Mystery'), ('Novelty-Quartz', 'Novelty-Quartz'), ('Novelty-Electric', 'Novelty-Electric'), ('Novelty-Mechanical', 'Novelty-Mechanical'), ('Ogee', 'Ogee'), ('Picture-Quartz', 'Picture-Quartz'), ('Picture-Electric', 'Picture-Electric'), ('Picture-Mechanical', 'Picture-Mechanical'), ('Portico', 'Portico'), ('Pillar & Scroll', 'Pillar & Scroll'), ('Plato', 'Plato'), ('Shelf-Quartz', 'Shelf-Quartz'), ('Shelf-Electric', 'Shelf-Electric'), ('Shelf-Mechanical', 'Shelf-Mechanical'), ("Ship's", "Ship's"), ('Skeleton', 'Skeleton'), ('Steeple', 'Steeple'), ('Swinging', 'Swinging'), ('Tambour', 'Tambour'), ('Tape', 'Tape'), ('Vienna Regulator', 'Vienna Regulator'), ('Wag on the Wall', 'Wag on the Wall'), ('Wall-Quartz', 'Wall-Quartz'), ('Wall-Electric', 'Wall-Electric'), ('Wall-Mechanical', 'Wall-Mechanical')], default='Longcase/Grandfather', max_length=32)),
                ('footprint', models.CharField(choices=[('Desktop', 'Desktop'), ('Floor', 'Floor'), ('Mantle', 'Mantle'), ('Wall', 'Wall')], default='Floor', max_length=16)),
                ('dial_diameter_centimeters', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('has_glass_over_face', models.BooleanField(default=False)),
                ('train_count', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=3)),
                ('wind_interval_days', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Never - Quartz/Battery/Electric/Atmos'), (1, 'Once Every Day'), (8, 'Once Every Week'), (15, 'Once Every Other Week'), (31, 'Once Every Month'), (400, 'Once Every Year')], default=8)),
                ('drive_type', models.CharField(choices=[('Mainspring', 'Mainspring - Wind Up'), ('Chain', 'Weights on Chains'), ('Cable', 'Weights on Cable with Pullies'), ('String', 'Weights on String'), ('Atmospheric', 'Atmospheric'), ('Electric', 'Electric'), ('Quartz', 'Battery/Quartz')], default='Cable', max_length=16)),
                ('gear_material', models.CharField(choices=[('Metal', 'Metal Gears'), ('Wood', 'Wooden Gears'), ('Plastic', 'Plastic Gears')], default='Metal', max_length=16)),
                ('chime_count', models.PositiveSmallIntegerField(choices=[(0, 'No Chime'), (1, 'Single Chime'), (2, 'Dual Chime'), (3, 'Triple Chime'), (4, '4+ Chime Options')], default=3)),
                ('strike_type', models.CharField(choices=[('None', 'No Strike'), ('Bim-Bam', 'Bim-Bam'), ('Cuckoo', 'Cuckoo'), ('Chord', 'Hourly Chord'), ('Note', 'Hourly Note'), ('Ship', "Ship's Bells")], default='Chord', max_length=32)),
                ('has_pendulum', models.BooleanField(default=False)),
                ('has_self_adjusting_beat', models.BooleanField(default=False)),
                ('has_self_adjusting_strike', models.BooleanField(default=False)),
                ('has_second_hand', models.BooleanField(default=False)),
                ('has_off_at_night', models.BooleanField(default=False)),
                ('has_calendar', models.BooleanField(default=False)),
                ('has_moon_dial', models.BooleanField(default=False)),
                ('has_alarm', models.BooleanField(default=False)),
                ('has_music_box', models.BooleanField(default=False)),
                ('has_activity_other', models.BooleanField(default=False)),
                ('has_light', models.BooleanField(default=False)),
                ('battery_count', models.PositiveSmallIntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5+')], default=0)),
                ('has_tubes', models.BooleanField(default=False)),
                ('tube_count', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Zero'), (5, 'Five Tubes'), (9, 'Nine Tubes')], default=0)),
                ('choices_are_locked', models.BooleanField(default=False)),
                ('image_1', models.ImageField(blank=True, upload_to='clocks/types/')),
                ('image_2', models.ImageField(blank=True, upload_to='clocks/types/')),
                ('image_3', models.ImageField(blank=True, upload_to='clocks/types/')),
                ('image_4', models.ImageField(blank=True, upload_to='clocks/types/')),
                ('image_5', models.ImageField(blank=True, upload_to='clocks/types/')),
            ],
        ),
        migrations.CreateModel(
            name='Clock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(default='Nickname', max_length=32)),
                ('date_created', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('footprint', models.CharField(choices=[('Desktop', 'Desktop'), ('Floor', 'Floor'), ('Mantle', 'Mantle'), ('Wall', 'Wall')], default='Floor', max_length=16)),
                ('dial_diameter_centimeters', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('has_glass_over_face', models.BooleanField(default=False)),
                ('train_count', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=3)),
                ('wind_interval_days', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Never - Quartz/Battery/Electric/Atmos'), (1, 'Once Every Day'), (8, 'Once Every Week'), (15, 'Once Every Other Week'), (31, 'Once Every Month'), (400, 'Once Every Year')], default=8)),
                ('drive_type', models.CharField(choices=[('Mainspring', 'Mainspring - Wind Up'), ('Chain', 'Weights on Chains'), ('Cable', 'Weights on Cable with Pullies'), ('String', 'Weights on String'), ('Atmospheric', 'Atmospheric'), ('Electric', 'Electric'), ('Quartz', 'Battery/Quartz')], default='Cable', max_length=16)),
                ('gear_material', models.CharField(choices=[('Metal', 'Metal Gears'), ('Wood', 'Wooden Gears'), ('Plastic', 'Plastic Gears')], default='Metal', max_length=16)),
                ('chime_count', models.PositiveSmallIntegerField(choices=[(0, 'No Chime'), (1, 'Single Chime'), (2, 'Dual Chime'), (3, 'Triple Chime'), (4, '4+ Chime Options')], default=3)),
                ('strike_type', models.CharField(choices=[('None', 'No Strike'), ('Bim-Bam', 'Bim-Bam'), ('Cuckoo', 'Cuckoo'), ('Chord', 'Hourly Chord'), ('Note', 'Hourly Note'), ('Ship', "Ship's Bells")], default='Chord', max_length=32)),
                ('has_pendulum', models.BooleanField(default=False)),
                ('has_self_adjusting_beat', models.BooleanField(default=False)),
                ('has_self_adjusting_strike', models.BooleanField(default=False)),
                ('has_second_hand', models.BooleanField(default=False)),
                ('has_off_at_night', models.BooleanField(default=False)),
                ('has_calendar', models.BooleanField(default=False)),
                ('has_moon_dial', models.BooleanField(default=False)),
                ('has_alarm', models.BooleanField(default=False)),
                ('has_music_box', models.BooleanField(default=False)),
                ('has_activity_other', models.BooleanField(default=False)),
                ('has_light', models.BooleanField(default=False)),
                ('battery_count', models.PositiveSmallIntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5+')], default=0)),
                ('has_tubes', models.BooleanField(default=False)),
                ('tube_count', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Zero'), (5, 'Five Tubes'), (9, 'Nine Tubes')], default=0)),
                ('choices_are_locked', models.BooleanField(default=False)),
                ('image_1', models.ImageField(blank=True, upload_to='clocks/')),
                ('image_2', models.ImageField(blank=True, upload_to='clocks/')),
                ('image_3', models.ImageField(blank=True, upload_to='clocks/')),
                ('image_4', models.ImageField(blank=True, upload_to='clocks/')),
                ('image_5', models.ImageField(blank=True, upload_to='clocks/')),
                ('clock_type_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='clock.clocktypes')),
                ('user_fk', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='clock',
            index=models.Index(fields=['id'], name='clock_id_index'),
        ),
    ]
