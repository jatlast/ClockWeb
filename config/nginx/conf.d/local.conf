# first we declare our upstream server, which is our Gunicorn application
upstream config_server {
    server djangoapp:8000;
#    server 0.0.0.0:8000;
}


server {
  listen 80;
  listen [::]:80;
#  server_name miclockrepair.com www.clockrepair.com;
#  server_name localhost;
#  server_name config_server;
  return 301 https://miclockrepair.com$request_uri;
#  return 302 https://localhost$request_uri;

   location / {
       # everything is passed to Gunicorn
       proxy_pass http://config_server;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header Host $host;
       proxy_redirect off;
   }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  include /etc/nginx/ssl-params.conf;
  server_name miclockrepair.com www.miclockrepair.com;

  ssl_certificate /etc/nginx/ssl/certs/miclockrepair.pem;
  ssl_certificate_key /etc/nginx/ssl/certs/miclockrepair.key;

# disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 10M;

  location / {
     proxy_pass http://config_server/;
#     proxy_pass http://miclockrepair.com:8000/;
     proxy_set_header X-Real-IP  $remote_addr;
     proxy_set_header X-Forwarded-For $remote_addr;
     proxy_set_header Host $host;
#     proxy_set_header Host $http:host;
     proxy_set_header X-Forwarded-Proto $scheme;
     proxy_redirect http://config_server/ $scheme://$http_host/;
     proxy_http_version 1.1;
     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection $connection_upgrade;
     proxy_read_timeout 20d;
     proxy_buffering off;
     }


  location /static/ {
      alias /usr/src/ClockWeb/staticfiles/;
  }

  location /media/ {
      alias /usr/src/ClockWeb/media/;
  }

}